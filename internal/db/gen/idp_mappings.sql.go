// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: idp_mappings.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getMappedRolesForGroups = `-- name: GetMappedRolesForGroups :many
SELECT role_name
FROM idp_group_role_mappings
WHERE org_id = $1
  AND provider = $2
  AND idp_group_id = ANY($3::text[])
`

type GetMappedRolesForGroupsParams struct {
	OrgID    pgtype.UUID `db:"org_id" json:"org_id"`
	Provider string      `db:"provider" json:"provider"`
	GroupIds []string    `db:"group_ids" json:"group_ids"`
}

func (q *Queries) GetMappedRolesForGroups(ctx context.Context, arg GetMappedRolesForGroupsParams) ([]interface{}, error) {
	rows, err := q.db.Query(ctx, getMappedRolesForGroups, arg.OrgID, arg.Provider, arg.GroupIds)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []interface{}
	for rows.Next() {
		var role_name interface{}
		if err := rows.Scan(&role_name); err != nil {
			return nil, err
		}
		items = append(items, role_name)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
